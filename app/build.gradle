apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
  compileSdkVersion android_build.compile_sdk
  buildToolsVersion android_build.build_tools

  defaultConfig {
    applicationId "com.github.mbarrben.moviedb"
    minSdkVersion android_build.min_sdk
    targetSdkVersion android_build.target_sdk
    versionCode 1
    versionName "1.0"
    vectorDrawables.useSupportLibrary = true

    Properties privateProperties = DefaultProperties.create()

    buildConfigField "String", "API_KEY", "\"${privateProperties['API_KEY']}\""
    buildConfigField "String", "API_READ_ACCESS_TOKEN", "\"${privateProperties['API_READ_ACCESS_TOKEN']}\""
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
  }

  dexOptions {
    preDexLibraries true
    javaMaxHeapSize '4G'
  }
}

kapt {
  generateStubs = true
}

dependencies {
  compile project(':common')
  compile project(':domain')

  compile libs.support.appcompat
  compile libs.support.cardview
  compile libs.support.recyclerview
  compile libs.support.design

  compile libs.rxbindings.recyclerview
  compile libs.rxbindings.basic

  compile libs.picasso
  compile libs.picasso_downloader
  compile libs.timber
  compile libs.byteunits

  compile libs.anko
  compile libs.anko_support
  compile libs.rx_android
  compile libs.rx_kotlin

  kapt libs.dagger_compiler
  compile libs.dagger
  provided libs.jsr250
}
